function: "func " NAME "(" parameter_list ")" block
parameter_list: [NAME ("," NAME)*]

assignment: NAME "=" expression
call: NAME "(" provided_parameters ")"
return: "return " expression
provided_parameters: [assignment ("," assignment)* ","?]

block: "{" expression* "}"

literal: STRING
       | SIGNED_NUMBER
expression: function
          | assignment
          | call
          | literal
          | return
          | NAME -> identifier
start: expression* 

%import common.CNAME -> NAME
%import common.LETTER
%import common.DIGIT
%import common.WS
%import common.SIGNED_NUMBER
%import common.ESCAPED_STRING -> STRING
%ignore WS
